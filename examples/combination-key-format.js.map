{"version":3,"sources":["webpack:///./examples/combination-key-format.js"],"names":["require","InputNumber","React","ReactDOM","Component","createClass","getInitialState","disabled","readOnly","value","onChange","console","log","setState","toggleDisabled","state","toggleReadOnly","format","num","render","margin","width","document","getElementById"],"mappings":";;;;;;;;;;;;;AAAA;AACA,oBAAAA,CAAQ,CAAR;AACA,KAAMC,cAAc,mBAAAD,CAAQ,CAAR,CAApB;AACA,KAAME,QAAQ,mBAAAF,CAAQ,EAAR,CAAd;AACA,KAAMG,WAAW,mBAAAH,CAAQ,GAAR,CAAjB;;AAEA,KAAMI,YAAYF,MAAMG,WAAN,CAAkB;AAAA;AAClCC,kBADkC,6BAChB;AAChB,YAAO;AACLC,iBAAU,KADL;AAELC,iBAAU,KAFL;AAGLC,cAAO;AAHF,MAAP;AAKD,IAPiC;AAQlCC,WARkC,oBAQzBD,KARyB,EAQlB;AACdE,aAAQC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;AACA,UAAKI,QAAL,CAAc,EAAEJ,YAAF,EAAd;AACD,IAXiC;AAYlCK,iBAZkC,4BAYjB;AACf,UAAKD,QAAL,CAAc;AACZN,iBAAU,CAAC,KAAKQ,KAAL,CAAWR;AADV,MAAd;AAGD,IAhBiC;AAiBlCS,iBAjBkC,4BAiBjB;AACf,UAAKH,QAAL,CAAc;AACZL,iBAAU,CAAC,KAAKO,KAAL,CAAWP;AADV,MAAd;AAGD,IArBiC;AAsBlCS,SAtBkC,kBAsB3BC,GAtB2B,EAsBtB;AACV,mBAAYA,GAAZ;AACD,IAxBiC;AAyBlCC,SAzBkC,oBAyBzB;AACP,YACE;AAAA;AAAA,SAAK,OAAO,EAAEC,QAAQ,EAAV,EAAZ;AACE,2BAAC,WAAD;AACE,cAAK,CAAC,IADR;AAEE,cAAK,KAFP;AAGE,gBAAO,KAAKL,KAAL,CAAWN,KAHpB;AAIE,gBAAO,EAAEY,OAAO,GAAT,EAJT;AAKE,mBAAU,KAAKN,KAAL,CAAWP,QALvB;AAME,mBAAU,KAAKE,QANjB;AAOE,mBAAU,KAAKK,KAAL,CAAWR,QAPvB;AAQE,oBAAW,KARb;AASE,eAAM,GATR;AAUE,oBAAW,KAAKU;AAVlB,SADF;AAaE;AAAA;AAAA;AACE;AAAA;AAAA,aAAQ,SAAS,KAAKH,cAAtB;AAAA;AAAA,UADF;AAEE;AAAA;AAAA,aAAQ,SAAS,KAAKE,cAAtB;AAAA;AAAA;AAFF;AAbF,MADF;AAoBD;AA9CiC,EAAlB,CAAlB;;AAiDAb,UAASgB,MAAT,CAAgB,oBAAC,SAAD,OAAhB,EAA8BG,SAASC,cAAT,CAAwB,iBAAxB,CAA9B,E","file":"combination-key-format.js","sourcesContent":["/* eslint no-console:0 */\nrequire('rc-input-number/assets/index.less');\nconst InputNumber = require('rc-input-number');\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\nconst Component = React.createClass({\n  getInitialState() {\n    return {\n      disabled: false,\n      readOnly: false,\n      value: 5,\n    };\n  },\n  onChange(value) {\n    console.log('onChange:', value);\n    this.setState({ value });\n  },\n  toggleDisabled() {\n    this.setState({\n      disabled: !this.state.disabled,\n    });\n  },\n  toggleReadOnly() {\n    this.setState({\n      readOnly: !this.state.readOnly,\n    });\n  },\n  format(num) {\n    return `$ ${num}`;\n  },\n  render() {\n    return (\n      <div style={{ margin: 10 }}>\n        <InputNumber\n          min={-8000}\n          max={10000}\n          value={this.state.value}\n          style={{ width: 100 }}\n          readOnly={this.state.readOnly}\n          onChange={this.onChange}\n          disabled={this.state.disabled}\n          autoFocus={false}\n          step={0.5}\n          formatter={this.format}\n        />\n        <p>\n          <button onClick={this.toggleDisabled}>toggle Disabled</button>\n          <button onClick={this.toggleReadOnly}>toggle readOnly</button>\n        </p>\n      </div>\n    );\n  },\n});\n\nReactDOM.render(<Component/>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/combination-key-format.js"],"sourceRoot":""}
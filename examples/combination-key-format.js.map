{"version":3,"sources":["webpack:///./examples/combination-key-format.js"],"names":["Component","state","disabled","readOnly","value","onChange","console","log","setState","toggleDisabled","toggleReadOnly","numberWithCommas","x","toString","replace","format","num","parser","split","render","margin","width","document","getElementById"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;gfAJA;;;KAMMA,S;;;;;;;;;;;;yJACJC,K,GAAQ;AACNC,iBAAU,KADJ;AAENC,iBAAU,KAFJ;AAGNC,cAAO;AAHD,M,QAKRC,Q,GAAW,UAACD,KAAD,EAAW;AACpBE,eAAQC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;AACA,aAAKI,QAAL,CAAc,EAAEJ,YAAF,EAAd;AACD,M,QACDK,c,GAAiB,YAAM;AACrB,aAAKD,QAAL,CAAc;AACZN,mBAAU,CAAC,MAAKD,KAAL,CAAWC;AADV,QAAd;AAGD,M,QACDQ,c,GAAiB,YAAM;AACrB,aAAKF,QAAL,CAAc;AACZL,mBAAU,CAAC,MAAKF,KAAL,CAAWE;AADV,QAAd;AAGD,M;;;uBACDQ,gB,6BAAiBC,C,EAAG;AAClB,YAAOA,EAAEC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD,I;;uBACDC,M,mBAAOC,G,EAAK;AACV,mBAAY,KAAKL,gBAAL,CAAsBK,GAAtB,CAAZ;AACD,I;;uBACDC,M,mBAAOD,G,EAAK;AACV,YAAOA,IAAIH,QAAJ,GAAeK,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6BJ,OAA7B,CAAqC,KAArC,EAA4C,EAA5C,CAAP;AACD,I;;uBACDK,M,qBAAS;AACP,YACE;AAAA;AAAA,SAAK,OAAO,EAAEC,QAAQ,EAAV,EAAZ;AACE;AACE,cAAK,CAAC,IADR;AAEE,cAAK,QAFP;AAGE,gBAAO,KAAKnB,KAAL,CAAWG,KAHpB;AAIE,gBAAO,EAAEiB,OAAO,GAAT,EAJT;AAKE,mBAAU,KAAKpB,KAAL,CAAWE,QALvB;AAME,mBAAU,KAAKE,QANjB;AAOE,mBAAU,KAAKJ,KAAL,CAAWC,QAPvB;AAQE,oBAAW,KARb;AASE,eAAM,GATR;AAUE,oBAAW,KAAKa,MAVlB;AAWE,iBAAQ,KAAKE;AAXf,SADF;AAcE;AAAA;AAAA;AACE;AAAA;AAAA,aAAQ,SAAS,KAAKR,cAAtB;AAAA;AAAA,UADF;AAEE;AAAA;AAAA,aAAQ,SAAS,KAAKC,cAAtB;AAAA;AAAA;AAFF;AAdF,MADF;AAqBD,I;;;GAnDqB,gBAAMV,S;;AAsD9B,oBAASmB,MAAT,CAAgB,8BAAC,SAAD,OAAhB,EAA8BG,SAASC,cAAT,CAAwB,iBAAxB,CAA9B,E","file":"combination-key-format.js","sourcesContent":["/* eslint no-console:0 */\nimport 'rc-input-number/assets/index.less';\nimport InputNumber from 'rc-input-number';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Component extends React.Component {\n  state = {\n    disabled: false,\n    readOnly: false,\n    value: 50000,\n  };\n  onChange = (value) => {\n    console.log('onChange:', value);\n    this.setState({ value });\n  }\n  toggleDisabled = () => {\n    this.setState({\n      disabled: !this.state.disabled,\n    });\n  }\n  toggleReadOnly = () => {\n    this.setState({\n      readOnly: !this.state.readOnly,\n    });\n  }\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n  format(num) {\n    return `$ ${this.numberWithCommas(num)} boeing737`;\n  }\n  parser(num) {\n    return num.toString().split(' ')[1].replace(/,*/g, '');\n  }\n  render() {\n    return (\n      <div style={{ margin: 10 }}>\n        <InputNumber\n          min={-8000}\n          max={10000000}\n          value={this.state.value}\n          style={{ width: 200 }}\n          readOnly={this.state.readOnly}\n          onChange={this.onChange}\n          disabled={this.state.disabled}\n          autoFocus={false}\n          step={100}\n          formatter={this.format}\n          parser={this.parser}\n        />\n        <p>\n          <button onClick={this.toggleDisabled}>toggle Disabled</button>\n          <button onClick={this.toggleReadOnly}>toggle readOnly</button>\n        </p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Component/>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/combination-key-format.js"],"sourceRoot":""}